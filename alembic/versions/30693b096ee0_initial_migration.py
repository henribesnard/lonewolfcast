"""initial migration

Revision ID: 30693b096ee0
Revises: 
Create Date: 2024-11-26 13:04:53.067463

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '30693b096ee0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leagues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('logo', sa.String(length=255), nullable=True),
    sa.Column('flag', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leagues_api_id'), 'leagues', ['api_id'], unique=True)
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_fixture_id', sa.Integer(), nullable=True),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('home_team', sa.String(length=255), nullable=False),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('home_team_logo', sa.String(length=255), nullable=True),
    sa.Column('away_team', sa.String(length=255), nullable=False),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_logo', sa.String(length=255), nullable=True),
    sa.Column('venue', sa.String(length=255), nullable=True),
    sa.Column('round', sa.String(length=50), nullable=True),
    sa.Column('predictions_synced', sa.Boolean(), nullable=False),
    sa.Column('last_predictions_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('odds_synced', sa.Boolean(), nullable=False),
    sa.Column('last_odds_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stats_synced', sa.Boolean(), nullable=False),
    sa.Column('last_stats_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_matches_api_fixture_id'), 'matches', ['api_fixture_id'], unique=True)
    op.create_table('seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('current', sa.Boolean(), nullable=True),
    sa.Column('has_predictions', sa.Boolean(), nullable=True),
    sa.Column('has_odds', sa.Boolean(), nullable=True),
    sa.Column('matches_synced', sa.Boolean(), nullable=False),
    sa.Column('last_match_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('home_score', sa.Integer(), nullable=False),
    sa.Column('away_score', sa.Integer(), nullable=False),
    sa.Column('home_halftime_score', sa.Integer(), nullable=True),
    sa.Column('away_halftime_score', sa.Integer(), nullable=True),
    sa.Column('home_possession', sa.Float(), nullable=True),
    sa.Column('away_possession', sa.Float(), nullable=True),
    sa.Column('home_total_passes', sa.Integer(), nullable=True),
    sa.Column('away_total_passes', sa.Integer(), nullable=True),
    sa.Column('home_accurate_passes', sa.Integer(), nullable=True),
    sa.Column('away_accurate_passes', sa.Integer(), nullable=True),
    sa.Column('home_passes_accuracy', sa.Float(), nullable=True),
    sa.Column('away_passes_accuracy', sa.Float(), nullable=True),
    sa.Column('home_shots_total', sa.Integer(), nullable=True),
    sa.Column('away_shots_total', sa.Integer(), nullable=True),
    sa.Column('home_shots_on_target', sa.Integer(), nullable=True),
    sa.Column('away_shots_on_target', sa.Integer(), nullable=True),
    sa.Column('home_shots_off_target', sa.Integer(), nullable=True),
    sa.Column('away_shots_off_target', sa.Integer(), nullable=True),
    sa.Column('home_shots_blocked', sa.Integer(), nullable=True),
    sa.Column('away_shots_blocked', sa.Integer(), nullable=True),
    sa.Column('home_shots_inside_box', sa.Integer(), nullable=True),
    sa.Column('away_shots_inside_box', sa.Integer(), nullable=True),
    sa.Column('home_shots_outside_box', sa.Integer(), nullable=True),
    sa.Column('away_shots_outside_box', sa.Integer(), nullable=True),
    sa.Column('home_corners', sa.Integer(), nullable=True),
    sa.Column('away_corners', sa.Integer(), nullable=True),
    sa.Column('home_offsides', sa.Integer(), nullable=True),
    sa.Column('away_offsides', sa.Integer(), nullable=True),
    sa.Column('home_fouls', sa.Integer(), nullable=True),
    sa.Column('away_fouls', sa.Integer(), nullable=True),
    sa.Column('home_yellow_cards', sa.Integer(), nullable=True),
    sa.Column('away_yellow_cards', sa.Integer(), nullable=True),
    sa.Column('home_red_cards', sa.Integer(), nullable=True),
    sa.Column('away_red_cards', sa.Integer(), nullable=True),
    sa.Column('home_goalkeeper_saves', sa.Integer(), nullable=True),
    sa.Column('away_goalkeeper_saves', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('has_winner', sa.Boolean(), nullable=False),
    sa.Column('total_goals', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('odds_bookmakers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('bookmaker_id', sa.Integer(), nullable=False),
    sa.Column('bookmaker_name', sa.String(length=100), nullable=False),
    sa.Column('bet_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('winner_name', sa.String(length=255), nullable=True),
    sa.Column('winner_comment', sa.Text(), nullable=True),
    sa.Column('win_or_draw', sa.Boolean(), nullable=True),
    sa.Column('under_over', sa.String(length=10), nullable=True),
    sa.Column('goals_home', sa.String(length=10), nullable=True),
    sa.Column('goals_away', sa.String(length=10), nullable=True),
    sa.Column('advice', sa.Text(), nullable=True),
    sa.Column('percent_home', sa.Float(), nullable=True),
    sa.Column('percent_draw', sa.Float(), nullable=True),
    sa.Column('percent_away', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('odds_values',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bookmaker_id', sa.Integer(), nullable=False),
    sa.Column('outcome', sa.String(length=50), nullable=False),
    sa.Column('odd', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['bookmaker_id'], ['odds_bookmakers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prediction_comparisons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prediction_id', sa.Integer(), nullable=False),
    sa.Column('form_home', sa.Float(), nullable=True),
    sa.Column('form_away', sa.Float(), nullable=True),
    sa.Column('att_home', sa.Float(), nullable=True),
    sa.Column('att_away', sa.Float(), nullable=True),
    sa.Column('def_home', sa.Float(), nullable=True),
    sa.Column('def_away', sa.Float(), nullable=True),
    sa.Column('poisson_distribution_home', sa.Float(), nullable=True),
    sa.Column('poisson_distribution_away', sa.Float(), nullable=True),
    sa.Column('h2h_home', sa.Float(), nullable=True),
    sa.Column('h2h_away', sa.Float(), nullable=True),
    sa.Column('goals_home', sa.Float(), nullable=True),
    sa.Column('goals_away', sa.Float(), nullable=True),
    sa.Column('total_home', sa.Float(), nullable=True),
    sa.Column('total_away', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['predictions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prediction_outcomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prediction_id', sa.Integer(), nullable=False),
    sa.Column('winner_prediction_correct', sa.Boolean(), nullable=True),
    sa.Column('win_or_draw_prediction_correct', sa.Boolean(), nullable=True),
    sa.Column('under_over_prediction_correct', sa.Boolean(), nullable=True),
    sa.Column('goals_prediction_accuracy', sa.Float(), nullable=True),
    sa.Column('pre_match_confidence', sa.Float(), nullable=True),
    sa.Column('form_difference', sa.Float(), nullable=True),
    sa.Column('historical_accuracy', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['predictions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prediction_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prediction_id', sa.Integer(), nullable=False),
    sa.Column('is_home', sa.Boolean(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('team_name', sa.String(length=255), nullable=False),
    sa.Column('team_logo', sa.String(length=255), nullable=True),
    sa.Column('last_5_played', sa.Integer(), nullable=True),
    sa.Column('last_5_form', sa.Float(), nullable=True),
    sa.Column('last_5_att', sa.Float(), nullable=True),
    sa.Column('last_5_def', sa.Float(), nullable=True),
    sa.Column('goals_for_total', sa.Integer(), nullable=True),
    sa.Column('goals_for_avg', sa.Float(), nullable=True),
    sa.Column('goals_against_total', sa.Integer(), nullable=True),
    sa.Column('goals_against_avg', sa.Float(), nullable=True),
    sa.Column('league_form', sa.String(length=50), nullable=True),
    sa.Column('league_fixtures_played_home', sa.Integer(), nullable=True),
    sa.Column('league_fixtures_played_away', sa.Integer(), nullable=True),
    sa.Column('league_fixtures_played_total', sa.Integer(), nullable=True),
    sa.Column('clean_sheet_home', sa.Integer(), nullable=True),
    sa.Column('clean_sheet_away', sa.Integer(), nullable=True),
    sa.Column('clean_sheet_total', sa.Integer(), nullable=True),
    sa.Column('failed_to_score_home', sa.Integer(), nullable=True),
    sa.Column('failed_to_score_away', sa.Integer(), nullable=True),
    sa.Column('failed_to_score_total', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['prediction_id'], ['predictions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prediction_teams')
    op.drop_table('prediction_outcomes')
    op.drop_table('prediction_comparisons')
    op.drop_table('odds_values')
    op.drop_table('predictions')
    op.drop_table('odds_bookmakers')
    op.drop_table('match_results')
    op.drop_table('seasons')
    op.drop_index(op.f('ix_matches_api_fixture_id'), table_name='matches')
    op.drop_table('matches')
    op.drop_index(op.f('ix_leagues_api_id'), table_name='leagues')
    op.drop_table('leagues')
    # ### end Alembic commands ###
